$mainMod = SUPER # Sets "Windows" key as main modifier

bind = $mainMod, Q, exec, $terminal
bind = $mainMod, C, killactive,
bind = $mainMod, M, exit,
bind = $mainMod, F, fullscreen,
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, V, togglefloating,
bind = $mainMod, R, exec, $menu
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle
bind = $mainMod, O, exec, ~/.config/scripts/wofi-theme.sh
bind = $mainMod, W, exec, app.zen_browser.zen

# hypridle
bind = $mainMod, F12, exec, ~/.config/scripts/toggle-hypridle.sh

# hyprpicker
bind = $mainMod, Print, exec, hyprpicker -a

# Printscreen bind
$SCREENSHOT_DIR = $HOME/Imagens/screenshots
bind = , Print, exec, sh -c 'grim -g "$(slurp)" - | tee "$SCREENSHOT_DIR/$(date +%Y-%m-%d_%H-%M-%S).png" | wl-copy && notify-send "Screenshot da Região" "Copiado para a área de transferência e salvo."'
bind = SHIFT, Print, exec, sh -c 'grim - | tee "$SCREENSHOT_DIR/$(date +%Y-%m-%d_%H-%M-%S).png" | wl-copy && notify-send "Screenshot da Tela Inteira" "Copiado para a área de transferência e salvo."'

# OCR
bind = SHIFT, Print, exec, sh -c 'grim -g "$(slurp)" "$SCREENSHOT_DIR/OCR_$(date +%Y-%m-%d_%H-%M-%S).png" && tesseract "$SCREENSHOT_DIR/OCR_$(date +%Y-%m-%d_%H-%M-%S).png" stdout -l por | wl-copy && notify-send "OCR" "Texto copiado para a área de transferência"'

# QRCODE
# bind = $mainMod, Print, exec, sh -c 'FILE="$SCREENSHOT_DIR/QR_$(date +%Y-%m-%d_%H-%M-%S).png" grim -g "$(slurp)" "$FILE" && zbarimg "$FILE" | wl-copy && notify-send "QR Code" "Código copiado para a área de transferência"'

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Other application launch
bind = $mainMod SHIFT, L, exec, waybar
bind = $mainMod SHIFT, K, exec, pkill waybar
bind = $mainMod SHIFT, N, exec, hyprpaper

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ --limit 2.0
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

#hyprsunset
bind = $mainMod, Home, exec, pgrep -x hyprsunset > /dev/null && pkill -9 hyprsunset || hyprsunset -t 4500
